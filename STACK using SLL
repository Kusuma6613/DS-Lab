#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node* link;
};
struct node* top = NULL, *cur, *temp;
void push(int ele)
{
    cur = (struct node*)malloc(sizeof(struct node));
    cur -> data = ele;
    cur -> link = NULL;
    if(top == NULL)
    {
        cur -> link = NULL;
    }
    else
    {
        cur->link = top;
    }
    top = cur;
}

int pop()
{
    temp = top;
    if(top == NULL)
    {
        printf("Stack is full");
    }
    else
    {
        top = top -> link;
        return temp -> data;
        free(temp);
    }
}

int peek()
{
    if(top == NULL)
    {
        printf("Stack underflow");
    }
    else
    {
        return top -> data;
    }
}

void display()
{
    if(top == NULL)
    {
        printf("Stack Underflow");
    }
    else
    {
        temp = top;
        while(temp != NULL)
        {
            printf("%d\n", temp -> data);
            temp = temp -> link;
        }
    }
}

int main()
{
    int ch, ele;
    while(1)
    {
        printf("1-Push\n2-Pop\n3-Peek\n4-Display\n5-Exit\n");
        printf("Enter your choice:\n");
        scanf("%d", &ch);
        switch(ch)
        {
            case 1:
                printf("Enter ele:");
                scanf("%d", &ele);
                push(ele);
                break;
            case 2:
                printf("Deleted ele is %d\n", pop());
                break;
            case 3:
                if(top == NULL)
                {
                    printf("Stack underflow");
                }
                else
                {
                    printf("Top element is %d\n", peek());
                }
                break;
            case 4:
                if(top == NULL)
                {
                    printf("Stack is underflow");
                }
                else
                {
                    display();
                }
                break;
            case 5:
                exit(0);
            }
        }
    }
///OUTPUT///
*/1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
1
Enter ele:123
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
1
Enter ele:456
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
1
Enter ele:789
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
1
Enter ele:258
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
1
Enter ele:69
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
1
Enter ele:45
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
1
Enter ele:54
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
4
54
45
69
258
789
456
123
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
2
Deleted ele is 54
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
3
Top element is 45
1-Push
2-Pop
3-Peek
4-Display
5-Exit
Enter your choice:
5

Process returned 0 (0x0)   execution time : 548.534 s
Press any key to continue.*/
